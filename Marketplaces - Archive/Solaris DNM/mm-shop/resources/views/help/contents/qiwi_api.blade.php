<h3>Solaris QIWI Protocol</h3>
<hr class="small" />
Данная страница содержит информацию по подключению к API магазина на платформе Solaris в качестве поставщика кошельков QIWI.
<hr class="small" />
Подключение к магазину в качестве обменника, предоставляющего кошельки для оплаты, осуществляется в 2 этапа:
<ol>
    <li><strong>Реализация протокола Solaris QIWI Protocol на сервере обменника (реализация поставщика данных).</strong></li>
    <li><strong>Настройка магазина на работу с API.</strong></li>
</ol>
<hr class="small" />
<h3>Алгоритм работы магазина и поставщика данных</h3>
<p>
    Алгоритм работы магазина и поставщика данных определен следующим образом:
    <ol>
    <li>
        <strong>Периодически (раз в 5-10 минут) магазин запрашивает у поставщика данных список доступных для оплаты номера QIWI-кошельков.</strong><br />
        Список кошельков для оплаты <strong>всегда перезаписывается</strong>, соответственно при запросе кошельков необходимо постоянно отдавать список <strong>всех доступных</strong> кошельков. <br />
        Если обновить данные о кошельках не удалось, то последние полученные данные считаются актуальными. <br /><br />
    </li>
    <li>
        Проверка статуса кошельков, генерация комментариев для платежей и их проверка осуществляется на стороне магазина, дополнительных действий со стороны обменника не требуется.
    </li>
    </ol>
</p>
<hr class="small" />
<h3>Протокол обмена данными и методы API</h3>
<p>
    В качестве формата обмена данными используется <a href="https://en.wikipedia.org/wiki/JSON" target="_blank"><strong>JSON</strong></a>. Готовые реализации сериализаторов данного формата встроены во все популярные языки программирования.
    <br /><br />
    Ключ магазина задается в панели администратора в магазине и используется для идентификации магазина на стороне обработчика. <strong>Он должен храниться в секрете, так как именно он используется для авторизации магазина/обменника при запросах.</strong><br /><br />
    Структура запроса определяется как JSON вида:
<pre><code>{"shop_key":"ключ магазина","action":"название метода","request":"данные"}</code></pre>
    Структура ответа в случае успеха определяется как JSON вида:
<pre><code>{"status":"ok","response":"данные"}</code></pre> или в случае ошибки:
<pre><code>{"status":"error","error":"описание ошибки"}</code></pre>
<strong>Важно!</strong> Все запросы выполняются без использования form-data и содержат в себе только JSON-содержимое. <br />
Пример получения содержимого запроса на языке PHP: <br />
<pre><code>&lt;?php
$request = file_get_contents('php://input');
var_dump(json_decode($request));
</code></pre>
</p>

<hr class="small" />

<h4>Метод list_wallets</h4>
<img src="{{ url('/assets/img/api/3.png') }}" /><br />
Используется для получения списка доступных кошельков с сервера обменника. <br />
Ответ должен содержать массив кошельков с параметрами:
<ul>
    <li><strong>login</strong> - номер кошелька в виде строки, только цифры, без + и пробелов</li>
    <li><strong>password</strong> - пароль в виде строки</li>
    <li><strong>daily_limit</strong> - суточный лимит на полученные средства для кошелька. Полезно если кошелек планирует использоваться в течение долгого времени или при большой активности в магазине, в случае удалении кошелька и повторном добавлении зарезервированный лимит будет обнулен. Используйте 0 для отключения лимита.</li>
    <li><strong>monthly_limit</strong> - месячный лимит, работает аналогично дневному</li>
</ul>

Вызывается с сервера обработчика путем POST-запроса на адрес: <code><strong>http://%HANDLER%/</strong>?action=list_wallets</code><br />

Пример запроса и ожидаемого ответа:
<div class="row">
    <div class="col-sm-24">
        <strong>Запрос:</strong>
        <pre><code>{"shop_key":"demo","action":"list_wallets"}</code></pre>
    </div>
    <div class="col-sm-24">
        <strong>Ответ:</strong>
        <pre><code>{"status":"ok","response":[{"login":"79991234567","password":"test123","daily_limit":10000,"monthly_limit":3000000},{"login":"79991234568","password":"test321","daily_limit":0,"monthly_limit":0}]}</code></pre>
    </div>
</div>

<hr class="small" />

<h3>Настройка магазина на работу с API</h3>
<div class="alert alert-warning">
    <strong>
        Важно! Для работы с API у магазина должна быть подключена дополнительная услуга "QIWI-кошельки" на вкладке Система. <br />
        Если число кошельков будет превышать количество оплаченных, то будет работать только оплаченное количество кошельков.
    </strong>
</div>
<p>
    Настройка магазина осуществляется в панели администратора, на вкладке QIWI в разделе API.     Для удобства отладки в панели отображается дополнительная информация о последнем полученном запросе и его обработке. <br />
    <a href="{{ url("/assets/img/api/settings.jpg") }}" target="_blank"><img src="{{ url('/assets/img/api/settings.jpg') }}" style="max-width: 300px"/></a> <br />
    <span class="text-muted">(изображение кликабельно)</span>
</p>